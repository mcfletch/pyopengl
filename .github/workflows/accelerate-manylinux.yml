name: Build PyOpenGL-accelerate wheels with manylinux

on:
  push:
    branches:
      - "master"

jobs:
  tarballs:
    name: Build source tarballs and root wheels
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install build
        run: >-
          python3 -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball for root
        run: >-
          python3 -m
          build
          --sdist
          --wheel
          --outdir dist/
          .
      - name: Build a source tarball for accelerate
        run: >-
          python3 -m
          build
          --sdist
          --outdir accelerate/dist
          accelerate

      - name: Save Core Distributions
        uses: actions/upload-artifact@v4
        with:
          name: core
          path: dist/*

      - name: Save Accelerate Distributions
        uses: actions/upload-artifact@v4
        with:
          name: accel
          path: accelerate/dist/*

  wheels:
    name: Build architecture-specific wheels on ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm, macos-latest, macos-13, windows-latest]  # Use specific versions for clarity
        arch: [x86_64, arm64]
        exclude:
          - os: ubuntu-latest
            arch: arm64
          - os: ubuntu-24.04-arm  # No need to specify arch, it's already implicit
            arch: x86_64  # Exclude x86_64 on ARM
          - os: macos-latest   # Exclude macOS 14-15 (Sonoma)
            arch: x86_64   # Exclude x86_64 explicitly
          - os: macos-13  # Exclude macOS 13 (Ventura) - arm64
            arch: arm64   # Exclude arm64 on macOS 13
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Build wheels (develop)
        uses: pypa/cibuildwheel@v2.22.0
        if: ${{ github.ref == 'refs/heads/develop' }}
        with:
          package-dir: "./accelerate"
          output-dir: "./accelerate/dist"
        env:
          BUILD_EXTENSION: yes
          CIBW_ARCHS_MACOS: ${{ matrix.os }}-${{ matrix.arch }}
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"

      - name: Build wheels (master)
        uses: pypa/cibuildwheel@v2.22.0
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          package-dir: "./accelerate"
          output-dir: "./accelerate/dist"
        env:
          BUILD_EXTENSION: yes
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_SKIP: "*-win32 *-manylinux_i686 *-musllinux_*"

      - name: Save wheels
        uses: actions/upload-artifact@v4
        with:
          name: accel-binary-${{ matrix.os }}-${{ matrix.arch }}
          path: accelerate/dist/*.whl

  pypi-publish-accel:
    name: Upload Accelerate ${{matrix.repo}}
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - wheels
      - tarballs
    # TODO: should be choosing the repo URL based on master/develop
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - name: Download Accelerate
        uses: actions/download-artifact@v4.1.7
        id: download-accelerate
        with:
          name: accel
          path: dist
      - name: Download Accelerate Binary Windows
        uses: actions/download-artifact@v4.1.7
        id: download-accelerate-bin-windows
        with:
          name: accel-binary-windows-latest
          path: dist
      - name: Download Accelerate Binary Ubuntu
        uses: actions/download-artifact@v4.1.7
        id: download-accelerate-bin-ubuntu
        with:
          name: accel-binary-ubuntu-latest
          path: dist
      - name: Download Accelerate Binary MacOS
        uses: actions/download-artifact@v4.1.7
        id: download-accelerate-bin-macOS
        with:
          name: accel-binary-macOS-latest
          path: dist

      # retrieve your distributions here
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # Note: this is apparently different than the package-dir meaning in the cibuildwheel
          packages-dir: "dist"

  pypi-publish-core:
    name: Upload Core to ${{matrix.repo}}
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - wheels
      - tarballs
    # TODO: should be choosing the repo URL based on master/develop
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - name: Download Core
        uses: actions/download-artifact@v4.1.7
        id: download
        with:
          name: core
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        id: upload
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          # Note: this is apparently different than the package-dir meaning in the cibuildwheel
          packages-dir: "dist"
